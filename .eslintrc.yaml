root: true
parser: '@typescript-eslint/parser'
parserOptions:
  project:
    - ./tsconfig.json
    - ./tests/tsconfig.json
env:
  node: true

plugins:
  - '@typescript-eslint'

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - prettier

rules:
  array-callback-return: error
  camelcase: error
  eqeqeq: [error, always, 'null': ignore]
  no-constant-condition: [error, checkLoops: false]
  no-control-regex: 0
  no-fallthrough: [error, commentPattern: fallthrough]
  no-implicit-globals: error
  no-template-curly-in-string: warn
  no-var: error
  prefer-const: [warn, destructuring: all]
  '@typescript-eslint/no-explicit-any': off
  '@typescript-eslint/no-namespace': off
  '@typescript-eslint/no-unsafe-argument': off
  '@typescript-eslint/no-unsafe-assignment': off
  '@typescript-eslint/no-unsafe-member-access': off
  '@typescript-eslint/no-unused-vars': [warn, argsIgnorePattern: '^_']
  '@typescript-eslint/prefer-includes': warn
  '@typescript-eslint/prefer-nullish-coalescing':
    - warn
    - { ignoreConditionalTests: true, ignoreMixedLogicalExpressions: true }
  '@typescript-eslint/prefer-optional-chain': warn
  '@typescript-eslint/restrict-template-expressions': off

overrides:
  - files: [config/**]
    parser: espree
    parserOptions:
      ecmaVersion: latest

  - files: [tests/**]
    env:
      jest: true
    rules:
      camelcase: 0
      '@typescript-eslint/no-non-null-assertion': off
      '@typescript-eslint/no-unsafe-call': off
      '@typescript-eslint/no-unsafe-return': off
      '@typescript-eslint/unbound-method': off
